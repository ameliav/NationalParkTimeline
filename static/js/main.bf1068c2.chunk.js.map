{"version":3,"sources":["components/AccordionEvent.js","components/MonthlyEvent.js","components/ParksHeader.js","history.js","components/TopMenu.js","components/Timeline.js","components/App.js","index.js"],"names":["AccordionEvent","this","props","mthArray","map","obj","i","mypanels","key","title","content","Label","className","name","src","alt","Accordion","panels","exclusive","fluid","defaultActiveIndex","React","Component","MonthlyEvent","distinctMonths","Set","e","x","Month","eventsMapping","monthlyMap","Map","month","monthlyEvents","filter","event","set","mth","get","ParksHeader","Header","as","color","textAlign","icon","Icon","Subheader","createBrowserHistory","scroller","Scroll","TopMenu","arr","arr2","len","yearArray","length","yearOptions","push","value","text","handleChange","scrollTo","duration","delay","smooth","nHandleChange","YearDropdownSearchSelect","Dropdown","search","selection","options","placeholder","onChange","NameDropdownSearchSelect","nameOptions","y","mySort","myArray","sort","a","b","sortAlphaNumeric","toLowerCase","toString","localeCompare","handleSubmit","Swal","fire","html","confirmButtonText","onClick","history","someEvents","jsonfile","distinctYears","Year","eventsMap","year","yearlyEvents","Timeline","renderHelper","index","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.bf1068c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Accordion, Label } from 'semantic-ui-react';\r\n\r\nclass AccordionEvent extends React.Component {\r\n   \r\n    render() {\r\n        return this.props.mthArray.map((obj, i) => {\r\n            const mypanels = [{\r\n                key: `panel-${i}`,\r\n                title: {\r\n                    content: <Label content={' ' + obj[\"Name\"]} />,\r\n                },\r\n                content: {\r\n                    content: (\r\n                        <div className=\"ui vertical fluid inverted olive menu\" name={obj[\"Name\"]}>\r\n                            <div className=\"active item\">\r\n                                Date Established: {obj[\"Month\"] + \" \" + obj[\"Day\"] + \", \" + obj[\"Year\"]}\r\n                            </div>\r\n                            <div className=\"active item\">\r\n                                Park Area in 2019: {obj[\"Park Area in 2019\"]}\r\n                            </div>\r\n                            <div className=\"active item\">\r\n                                Annual Recreation Visitors in 2019: {obj[\"Annual Recreation visitors in 2019\"]}\r\n                            </div>\r\n                            <div className=\"active item\">Location: {obj[\"Location\"]}</div>\r\n                            <div className=\"active item\">{obj[\"Description\"]}</div>  \r\n                            <div className=\"active item\">\r\n                                <img src={obj[\"Image Link\"]} alt={obj[\"Name\"]}/>\r\n                            </div>                      \r\n                        </div>\r\n                )},\r\n            }]\r\n            return (\r\n                <div key={i} className=\"item\">\r\n                    <Accordion\r\n                        panels={mypanels}\r\n                        exclusive={false}\r\n                        fluid\r\n                        defaultActiveIndex={[0, 1]}\r\n                    />\r\n                </div>\r\n            )\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default AccordionEvent;","import React from 'react';\r\nimport AccordionEvent from './AccordionEvent';\r\n\r\nclass MonthlyEvent extends React.Component {\r\n    \r\n    distinctMonths = [...new Set(this.props.e.map(x => x.Month))];\r\n\r\n    eventsMapping = () => {\r\n        let monthlyMap = new Map(); //creates new Map (key value pairs)\r\n        for (let month of this.distinctMonths) {  //loop through set of distinct months. example: (Jan, Feb, Mar)\r\n            let monthlyEvents = this.props.e.filter((event) => {  //filter only returns what is true inside its function\r\n                if (event.Month === month) {           //filter thru data when Month is equal to the month in the distinctMonths set\r\n                    return event;\r\n                }\r\n            })\r\n            monthlyMap.set(month, monthlyEvents)  //creates Map with the key being the year and array with all objects for that year\r\n        }\r\n        return monthlyMap;\r\n    }\r\n    render(){\r\n\r\n        return (this.distinctMonths.map((mth, i) => {\r\n            //mthArray = this.eventsMapping().get(mth);\r\n            \r\n                return (\r\n                    <div key={i} className=\"row\">          \r\n                        <div className=\"right floated four wide column\">\r\n                            <div className=\"ui vertical inverted green fluid menu\">\r\n                                <h5 className=\"ui right aligned header item\">{mth}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"left aligned eleven wide column\">\r\n                            <div className=\"ui vertical inverted olive fluid menu\">\r\n                                <AccordionEvent mthArray={this.eventsMapping().get(mth)}/>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>                    \r\n                )\r\n            \r\n            })\r\n\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthlyEvent;","import React from 'react';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\nclass ParksHeader extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n            <div className=\"column\">\r\n                <Header as='h1' color='green' textAlign='center' icon>\r\n                    <Icon name=\"tree\" />\r\n                National Parks\r\n                <Header.Subheader color='green'>Establishment Timeline</Header.Subheader>\r\n                </Header>\r\n               \r\n            </div>\r\n            </div>                   \r\n        )\r\n    }\r\n}\r\n\r\nexport default ParksHeader;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport history from '../history';\r\nimport Swal from 'sweetalert2';\r\nimport Scroll from 'react-scroll';\r\nlet scroller = Scroll.scroller;\r\n\r\nclass TopMenu extends React.Component {\r\n    arr = [];\r\n    arr2 = [];\r\n    len = this.props.yearArray.length;\r\n    \r\n    yearOptions = () => {     \r\n        for (var i = 0; i < this.len; i++) {\r\n            this.arr.push({\r\n                key: i + \"_\" + this.props.yearArray[i],\r\n                value: i + \"_\" + this.props.yearArray[i],\r\n                text: this.props.yearArray[i]\r\n            });\r\n        }\r\n        return this.arr; //returns an array of objects [{key:'',value:'',text:''}, {key:'',value:'',text:''}]\r\n    }\r\n\r\n    handleChange = (e,{ value }) => {\r\n        scroller.scrollTo(value, {\r\n            duration: 800,\r\n            delay: 0,\r\n            smooth: 'easeInOutQuart'\r\n        })\r\n        };\r\n    nHandleChange = (e, { value }) => {\r\n        scroller.scrollTo(value, {\r\n            duration: 800,\r\n            delay: 0,\r\n            smooth: 'easeInOutQuart'\r\n        })\r\n    };\r\n    YearDropdownSearchSelect = () => (\r\n        <Dropdown\r\n            search\r\n            selection\r\n            options={this.yearOptions()}\r\n            placeholder=\"Go to Year\"\r\n            onChange= {this.handleChange}\r\n        />\r\n    )\r\n    NameDropdownSearchSelect = () => (\r\n        <Dropdown\r\n            search\r\n            selection\r\n            options={this.nameOptions()}\r\n            placeholder=\"Go to Park\"\r\n            onChange={this.nHandleChange}\r\n        />\r\n    )\r\n    nameOptions = () => {\r\n        this.props.e.map((y, i) => {\r\n            return (\r\n                this.arr2.push({\r\n                    key: y[\"Name\"],\r\n                    value: y[\"Name\"],\r\n                    text: y[\"Name\"]\r\n                })                   \r\n            )\r\n        })\r\n        return this.mySort(this.arr2);\r\n    }\r\n    mySort = (myArray) => {\r\n        return myArray.sort((a, b) => this.sortAlphaNumeric(a['text'], b['text']) );\r\n    }\r\n\r\n    sortAlphaNumeric = (a,b) => {\r\n        a = typeof a === 'string' ? a.toLowerCase() : a.toString();\r\n        b = typeof b === 'string' ? b.toLowerCase() : b.toString();\r\n        return a.localeCompare(b);\r\n    }\r\n    handleSubmit = () => {\r\n    Swal.fire({\r\n        title: 'About',\r\n        html: 'This is a project made by <b>Amelia V.</b> ' +\r\n        'to show the order that National Parks ' + \r\n        'were established and info about each one.' +\r\n        '<br/><br/>Data was taken from the wikipedia page on '+\r\n        '<a href=\"https://en.wikipedia.org/wiki/List_of_national_parks_of_the_United_States\">National Parks.</a>'+\r\n        '<br/><br/>Using the top menu, you can go to a specific year or park.',\r\n        icon: 'info',\r\n        confirmButtonText:\r\n            '<i className=\"icon thumbs up\"></i> Got it!'\r\n    })\r\n       \r\n    } \r\n    render() {\r\n        return (\r\n            <div className=\"ui mini top inverted green fixed menu\">\r\n                <div className=\"active header item\">\r\n                    <h5 className=\"ui inverted header\">\r\n                        <i className=\"tree icon\"></i>\r\n                        <div className=\"content\">\r\n                            National Park Timeline\r\n                        </div>\r\n                    </h5>\r\n                </div>\r\n\r\n                <div className=\"right menu\">\r\n                    <div className=\"ui item\">                    \r\n                        {this.YearDropdownSearchSelect()}\r\n                    </div>\r\n                    <div className=\"ui item\">\r\n                        {this.NameDropdownSearchSelect()}\r\n                    </div>\r\n                    <div className=\"ui item\">\r\n                        <div className=\"ui green button\" onClick={this.handleSubmit}>About</div>\r\n                    </div>\r\n                    <div className=\"ui item\">\r\n                        <div className=\"ui primary button\" onClick={() => history.push('/')}>Logout</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TopMenu;\r\n\r\n/*\r\n    yearOptions = () => {\r\n        return (this.props.yearArray.map((y, i) => {\r\n            this.arr = [...this.arr, { key: i, value: y, text: y }];\r\n            return this.arr;\r\n            })\r\n        )\r\n        //return this.arr;\r\n    }\r\n*/\r\n/*\r\n    yearOptions = () => {\r\n        return this.props.yearArray.map((y, i) => {\r\n            return [...this.arr, { key: i, value: i, text: y }];\r\n            /*return (\r\n                <option key={i} value={y} >{y}</option>\r\n            )\r\n        })\r\n\r\n        //return arr;\r\n    }\r\n*/\r\n/*\r\n{this.DropdownExampleSearchSelection()}\r\n\r\n<div className=\"item\">\r\n    <select className=\"ui simple dropdown item\" >\r\n        <option value=\"\">Year</option>\r\n        {this.yearOptions()}\r\n    </select>\r\n</div>\r\n\r\n<Dropdown\r\n    clearable\r\n    fluid\r\n    search\r\n    selection\r\n    options={monthOptions(this.props.yearArray)}\r\n    placeholder='Year'\r\n/>\r\n*/","import React from 'react';\r\nimport MonthlyEvent from './MonthlyEvent';\r\nimport * as jsonfile from '../data/nationalparks.json';\r\nimport ParksHeader from './ParksHeader';\r\nimport TopMenu from './TopMenu';\r\n\r\n//getting the json with the timeline data\r\nconst someEvents = jsonfile.default;\r\nconst distinctYears = [...new Set(someEvents.map(x => x.Year))]; //a new set with distinct years\r\nconst eventsMapping = () => {\r\n    let eventsMap = new Map(); //hosts key value pairs similar to an object\r\n    for (let year of distinctYears) {\r\n        let yearlyEvents = someEvents.filter((event) => {\r\n            if (event.Year === year) {\r\n                return event;\r\n            }\r\n        })\r\n        eventsMap.set(year, yearlyEvents)  //creates Map with the key being the year and array with all objects for that year\r\n    }\r\n    return eventsMap;\r\n}\r\n\r\nclass Timeline extends React.Component {\r\n    \r\n    renderHelper = () => {\r\n        return (\r\n            distinctYears.map((y, index) => {\r\n                return ( \r\n                    <div key={index} className=\"ui text container\">\r\n                    <div className=\"ui grid\">\r\n                        <div key={index} className=\"row\" name={index + \"_\" + y}>\r\n                            <div className=\"five wide column\">\r\n                                <div className=\"ui vertical blue inverted fluid menu\">\r\n                                    <h5 className=\"ui center aligned header item\" >{y}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                         <MonthlyEvent e={eventsMapping().get(y)} />                                \r\n                    </div>\r\n                    </div>                    \r\n                )\r\n            }))\r\n    }\r\n    render() {      \r\n        return (\r\n            <div className=\"ui text container\">\r\n                <div className=\"ui grid\">\r\n                <TopMenu yearArray={distinctYears} e={someEvents}/>\r\n                <div className=\"row\"><div className=\"column\"></div></div>\r\n                <div className=\"row\"><div className=\"column\"></div></div>\r\n                <div className=\"row\"><div className=\"column\"></div></div>\r\n                <ParksHeader/>\r\n                <div className=\"row\"><div className=\"column\"></div></div>\r\n                {this.renderHelper()}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Timeline;","import React from 'react';\r\n//import { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Timeline from './Timeline';\r\n//import Login from './Login';\r\n//import history from \"../history\";\r\n\r\nclass App extends React.Component {\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Timeline/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n<Router history={history} basename=\"/\">\r\n          <div>\r\n            <Route path=\"/\" exact component={Login} />\r\n            <Route path=\"/#/timeline\" component={Timeline} />\r\n          </div>\r\n        </Router>\r\n*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import reduxThunk from 'redux-thunk';\r\n//import { Provider } from 'react-redux'; // a component within the react-redux library\r\n//import { createStore, applyMiddleware, compose } from 'redux';\r\n//import reducers from './reducers';   //a component we created\r\nimport App from './components/App';  //a component we created\r\n\r\n//const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n//const store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(/*<Provider store={store}>*/<App />/*</Provider>*/, document.querySelector('#root'));"],"sourceRoot":""}